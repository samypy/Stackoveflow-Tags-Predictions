Sub GetLastRowOfFilteredTable()
    Dim ws As Worksheet
    Dim tbl As ListObject
    Dim lastRow As Long

    ' Set the worksheet containing your table
    Set ws = ThisWorkbook.Worksheets("Sheet1") ' Replace "Sheet1" with your sheet name

    ' Set the table
    Set tbl = ws.ListObjects("Table1") ' Replace "Table1" with your table name

    ' Check if a filter is applied
    If tbl.AutoFilter.FilterMode Then
        ' Find the last visible row in the filtered table
        On Error Resume Next
        lastRow = tbl.ListRows(tbl.ListRows.Count).Range.Row
lastRow = tbl.ListRows(tbl.ListRows.Count).Range.SpecialCells(xlCellTypeVisible).Row
        On Error GoTo 0
    Else
        ' If no filter is applied, get the last row in the table
        lastRow = tbl.ListRows.Count
    End If

    ' Display the last row number
    MsgBox "Last Row Number: " & lastRow
End Sub
lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
 ' Set the range to the desired column (e.g., column "A")
    Set rng = ws.Range("A:A")
    
    ' Find the last visible row with data starting from the bottom
    On Error Resume Next
    lastRow = rng.SpecialCells(xlCellTypeVisible).Row
 ' Initialize lastRow to 0
    lastRow = 0
    
    ' Loop through the table's rows to find the last visible row
    For Each row In tbl.ListRows
        If Not row.Range.EntireRow.Hidden Then
            ' If the row is not hidden, update lastRow
            lastRow = row.Index
        End If
    Next row

Sub ExtractNumbersInParentheses()
    Dim inputString As String
    Dim strArray() As String
    Dim i As Integer
    
    ' Input string containing the numbers in parentheses
    inputString = "3(90),5(60),2(45),7(20)"
    
    ' Split the input string into an array using comma as the delimiter
    strArray = Split(inputString, ",")
    
    ' Loop through the elements in the array
    For i = LBound(strArray) To UBound(strArray)
        ' Extract the number before the opening parenthesis
        Dim number As Integer
        number = Val(Left(strArray(i), InStr(strArray(i), "(") - 1))
        
        ' Perform some action based on the extracted number
        MsgBox "Number: " & number



        ' You can replace the MsgBox with any desired action here
        
    Next i
End Sub

Dim percentage As Double
percentage = Val(Mid(strArray(i), InStr(strArray(i), "(") + 1, Len(strArray(i)) - InStr(strArray(i), "(") - 2))

PasteSpecial Paste:=xlPasteValues
Hello Vivian, after an internal discussion, we've grasped the requirements. Akshat is currently working on July data and should have it ready for our discussion by August 13th. I'll schedule some time on our calendar for us to review it.

Despite the commendable effort you invested in preparing the report, it has come to my attention that we failed to ensure the proper delivery of the report to the stakeholders. This oversight is deeply disappointing and cannot be taken lightly. It reflects poorly on our team's professionalism and diligence, and it may have adverse consequences for our reputation and relationships with the stakeholders.

It is imperative that we act swiftly and decisively to rectify this situation and prevent similar lapses in the future. I request that both of you thoroughly investigate the root causes of this oversight and provide a detailed explanation of what went wrong. Additionally, please present a comprehensive plan to ensure that such incidents do not occur again.
